// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _first_counter_HH_
#define _first_counter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "first_counter_increment.h"

namespace ap_rtl {

struct first_counter : public sc_module {
    // Port declarations 4
    sc_in_clk clock;
    sc_in< sc_logic > reset;
    sc_in< sc_logic > enable;
    sc_out< sc_lv<4> > out_counter;


    // Module declarations
    first_counter(sc_module_name name);
    SC_HAS_PROCESS(first_counter);

    ~first_counter();

    sc_trace_file* mVcdFile;

    first_counter_increment* grp_first_counter_increment_fu_50;
    sc_signal< sc_lv<4> > grp_first_counter_increment_fu_50_out_counter;
    sc_signal< sc_logic > grp_first_counter_increment_fu_50_out_counter_ap_vld;
    sc_signal< sc_lv<4> > grp_first_counter_increment_fu_50_first_counter_count_V_o;
    sc_signal< sc_logic > grp_first_counter_increment_fu_50_first_counter_count_V_o_ap_vld;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > first_counter_count_V;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_first_counter_count_V();
    void thread_out_counter();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
};

}

using namespace ap_rtl;

#endif
