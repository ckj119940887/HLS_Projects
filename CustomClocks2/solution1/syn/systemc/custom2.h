// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _custom2_HH_
#define _custom2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "first_counter.h"

namespace ap_rtl {

struct custom2 : public sc_module {
    // Port declarations 6
    sc_in_clk clock1;
    sc_in_clk clock2;
    sc_in< sc_logic > reset;
    sc_in< sc_logic > enable;
    sc_out< sc_lv<4> > out_counter1;
    sc_out< sc_lv<4> > out_counter2;


    // Module declarations
    custom2(sc_module_name name);
    SC_HAS_PROCESS(custom2);

    ~custom2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle_clock1;
    ofstream mHdltvoutHandle_clock1;
    first_counter* grp_first_counter_fu_70;
    first_counter* grp_first_counter_fu_86;
    sc_signal< sc_lv<4> > grp_first_counter_fu_70_out_counter;
    sc_signal< sc_lv<4> > grp_first_counter_fu_86_out_counter;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
    void thread_out_counter1();
    void thread_out_counter2();
    void thread_hdltv_gen_clock1();
};

}

using namespace ap_rtl;

#endif
